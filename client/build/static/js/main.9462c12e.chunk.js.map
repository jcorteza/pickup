{"version":3,"sources":["pages/ClientOrder/index.js","pages/DispatchDrivers/index.js","components/CurrentLocation/index.js","components/MapContainer/index.js","pages/DispatchOverview/index.js","pages/DispatchVehicle/index.js","pages/DriverOrder/index.js","components/DeliveryTable/index.js","pages/DriverOverview/index.js","pages/DriverSignup/index.js","pages/ClientSignup/index.js","pages/PickupHome/index.js","pages/UserLogin/index.js","App.js","serviceWorker.js","index.js","pages/PickupHome/img/map.jpg"],"names":["ClientOrder","state","startLocation","endLocation","inputStart","inputEnd","loadDescription","vehicleRequirement","handleInputChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleAddress1","assertThisInitialized","handleAddress2","console","log","thisState","google","props","addressInput1","document","getElementById","autocompleteStart","maps","places","Autocomplete","setFields","addListener","address1","place1","getPlace","address_components","short_name","join","coordinates","Geocoder","JSON","stringify","src","icon","address","setOptions","strictBounds","addressInput2","autocompleteEnd","address2","place2","geometry","location","handleFormSubmit","preventDefault","newOrder","loadDescritpion","status","clientId","axios","post","then","response","catch","error","_this2","this","react_default","a","createElement","className","lib","id","onChange","type","placeholder","ref","autocomplete","required","onClick","Component","DispatchDrivers","firstName","lastName","fistName","get","header","mapStyles","position","width","height","margin-right","margin-left","CurrentLocation","_React$Component","classCallCheck","_this$props$initialCe","possibleConstructorReturn","getPrototypeOf","call","initialCenter","lat","lng","currentLocation","inherits","createClass","key","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","loadMap","prevProps","prevState","recenterMap","mapRef","refs","map","node","ReactDOM","findDOMNode","zoom","_this$state$currentLo","center","LatLng","mapConfig","assign","Map","current","panTo","_this3","children","React","Children","c","cloneElement","mapCenter","style","renderChildren","defaultProps","visible","MapContainer","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","components_CurrentLocation","dist","GoogleApiWrapper","apiKey","DispatchOverview","components_MapContainer","DispatchVehicles","DriverOrder","DeliveryTable","Table_default","striped","bordered","hover","colSpan","DriverOverview","DeliveryTable_DeliveryTable","DriverSignup","phoneNumber","vehicleMake","vehicleModel","vehicleYear","vehicleColor","licencePlate","username","password","trim","newDriver","data","autoComplete","minLength","maxLength","color","ClientSignup","successfulSignup","email","newClient","Redirect","to","Pickup","Navbar_default","bg","variant","Brand","href","Nav_default","Link","Container_default","Row_default","Col_default","sm","Jumbotron_default","Button_default","Image_default","mapImage","fluid","sticky","variants","UserLogin","isAuthenticated","userType","userLogin","loginType","newPath","App","Switch","Route","exact","path","component","PickupHome","DispatchVehicle","render","pages_ClientOrder","Boolean","window","hostname","match","BrowserRouter","src_App","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9462c12e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button} from 'react-materialize';\nimport {Input} from 'react-materialize';\nimport {Row} from 'react-materialize';\n// import InfoWindow from \"../../components/InfoWindow\";\nimport \"./style.css\";\n\nclass ClientOrder extends Component {\n    state = {\n          startLocation: \"\",\n          endLocation: \"\",\n          inputStart: \"\",\n          inputEnd: \"\",\n          loadDescription: \"\",\n          vehicleRequirement: \"\"\n    };\n\n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        const { name, value } = event.target;\n        // Updating the input's state\n        this.setState({\n            [name]: value\n        });\n\n        if (event.target.name === \"inputStart\") {\n            this.handleAddress1(this);\n        }\n        else if (event.target.name === \"inputEnd\") {\n            this.handleAddress2(this);\n            console.log(\"end\");\n        }\n    };\n\n    handleAddress1 = (thisState) => {\n        const { google } = thisState.props;\n        if (!google) return;\n        \n        const addressInput1 = document.getElementById(\"address1\");\n        const autocompleteStart = new google.maps.places.Autocomplete(addressInput1);\n        // Set the data fields to return when the user selects a place.\n        autocompleteStart.setFields(['address_components', 'geometry', 'icon', 'name']);\n        autocompleteStart.addListener('place_changed', () => {\n            console.log(\"autocompleteStart\");\n            // infowindow1.close();\n            const place1 = autocompleteStart.getPlace();\n            console.log(place1);\n            \n            // eslint-disable-next-line \n            let address1;\n            if (place1.address_components) {\n                address1 = [\n                    // eslint-disable-next-line \n                    (place1.address_components[0] && place1.address_components[0].short_name || ''),\n                    // eslint-disable-next-line \n                    (place1.address_components[1] && place1.address_components[1].short_name || ''),\n                    // eslint-disable-next-line \n                    (place1.address_components[2] && place1.address_components[2].short_name || '')\n                ].join(' ');\n            }\n            const coordinates = thisState.props.google.maps.Geocoder();\n            console.log(JSON.stringify(coordinates));\n            if (!place1) return;\n            console.log(\"test1\");\n            console.log(JSON.stringify(place1));\n            thisState.setState({ \n                startLocation: {\n                    src: place1.icon,\n                    name: place1.name,\n                    address: address1\n                }\n            });\n            // infowindow.open(map, marker);\n        });\n        \n        // autocompleteStart.setTypes(\"changetype-all\", []);\n        autocompleteStart.setOptions({strictBounds: false});\n    }\n\n    handleAddress2 = (thisState) => {\n        const { google } = thisState.props;\n        if (!google) return;\n\n        const addressInput2 = document.getElementById(\"address2\");\n        const autocompleteEnd = new google.maps.places.Autocomplete(addressInput2);\n        // Set the data fields to return when the user selects a place.\n        autocompleteEnd.setFields(['address_components', 'geometry', 'icon', 'name']);\n        autocompleteEnd.addListener('place_changed', () => {\n            console.log(\"autocompleteEnd\");\n            const place2 = autocompleteEnd.getPlace();\n            \n            // eslint-disable-next-line \n            let address2;\n            if (place2.address_components) {\n                address2 = [\n                    // eslint-disable-next-line \n                    (place2.address_components[0] && place2.address_components[0].short_name || ''),\n                    // eslint-disable-next-line \n                    (place2.address_components[1] && place2.address_components[1].short_name || ''),\n                    // eslint-disable-next-line \n                    (place2.address_components[2] && place2.address_components[2].short_name || '')\n                ].join(' ');\n            }\n            \n            if (!place2.geometry) return;\n            console.log(place2.geometry.location);\n            thisState.setState({ \n                endLocation: {\n                    src: place2.icon,\n                    name: place2.name,\n                    address: address2\n                }\n            });\n            // infowindow.open(map, marker);\n        });\n        // autocompleteEnd.setTypes(\"changetype-all\", []);\n        autocompleteEnd.setOptions({strictBounds: false});\n    }\n    \n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n        const thisState = this;\n        const newOrder = {\n            startLocation: this.state.startLocation,\n            endLocation: this.state.endLocation,\n            loadDescritpion: this.state.loadDescritpion,\n            vehicleRequirement: this.state.vehicleRequirement,\n            status: \"pending\",\n            clientId: 9999\n        };\n        axios.post(\n            \"api/submit-order\",\n            newOrder\n        ).then((response) => {\n            console.log(JSON.stringify(response));\n            thisState.setState({\n                startLocation: \"\",\n                endLocation: \"\",\n                loadDescritpion: \"\",\n                vehicleRequirement: \"\"\n            });\n        }).catch((error) => {\n            console.log(JSON.stringify(error));\n        });\n    };\n    \n    render() {\n        // Notice how each input has a `value`, `name`, and `onChange` prop\n        return (\n            <div>\n                <h1>Submit a New Order</h1>\n                <form className=\"form\">\n                    <Row>\n                        <Input\n                          id=\"address1\"\n                          value={this.state.inputStart}\n                          name=\"inputStart\"\n                          onChange={this.handleInputChange}\n                          type=\"text\"\n                          placeholder=\"Pick-Up Address\"\n                          ref={ref => (this.autocomplete = ref)}\n                          required\n                        />\n                        <Input\n                          id=\"address2\"\n                          value={this.state.inputEnd}\n                          name=\"inputEnd\"\n                          onChange={this.handleInputChange}\n                          type=\"text\"\n                          placeholder=\"Drop-off Address\"\n                          ref={ref => (this.autocomplete = ref)}\n                          required\n                        />\n                    </Row>\n                    <Input \n                      value={this.state.loadDescription}\n                      name=\"loadDescription\"\n                      onChange={this.handleInputChange}\n                      type=\"text\"\n                      placeholder=\"Load Description\"\n                      required\n                    />\n                    <Input \n                      value={this.state.vehicleRequirement}\n                      name=\"vehicleRequirement\"\n                      onChange={this.handleInputChange}\n                      type=\"text\"\n                      placeholder=\"Vehicle Requirement\"\n                      required\n                    />\n                    <Button onClick={this.handleFormSubmit}>Submit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nexport default ClientOrder;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Collection} from 'react-materialize';\nimport {CollectionItem} from 'react-materialize';\nimport \"./style.css\";\n\nclass DispatchDrivers extends Component {\n\n    state = {\n        firstName: \"\",\n        lastName: \"\"\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        \n        event.preventDefault();\n\n        this.setState({\n            fistName: \"\",\n            lastName: \"\"\n        });\n    };\n\n    render () {\n        axios.get(\"/dispatch/dispatch-drivers\")\n            .then((response) => {\n                console.log(\"successful\");\n            })\n            .catch((error) => {\n                console.log(\"error\");\n            });\n        return (\n            <div>\n                <h1>Driver Dispatch</h1>\n            \n                \n            <Collection header=\"Driver Names\">\n                <CollectionItem>Driver 1 {this.state.firstName}</CollectionItem>\n                <CollectionItem>Driver 2</CollectionItem>\n                <CollectionItem>Driver 3</CollectionItem>\n                <CollectionItem>Driver 4</CollectionItem>\n                <CollectionItem>Driver 6</CollectionItem>\n            </Collection>\n            </div>\n        );\n    }\n}\n\nexport default DispatchDrivers;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '50%',\n    height: '100%',\n    \"margin-right\": \"25%\",\n    \"margin-left\": \"25%\"\n  }\n};\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n\n    return (\n      <div>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 29.727461,\n    lng: -95.549436\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\n","import React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nimport CurrentLocation from '../CurrentLocation';\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={'current location'} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCJ7S7yZRVxrerAXxamcQpUP0TD4DjHy04'\n})(MapContainer);\n","import React from \"react\";\nimport axios from \"axios\";\nimport MapContainer from \"../../components/MapContainer\";\n\nfunction DispatchOverview() {\n    axios.get(\"/dispatch/dispatch-overview\")\n            .then((response) => {\n                console.log(\"successful\");\n            })\n            .catch((error) => {\n                console.log(\"error\");\n            });\n    return(\n        <div>\n            <h1>Dispatch Main Overview</h1>\n            <MapContainer />\n            <p>Order go here.</p>\n        </div>\n    );\n}\n\nexport default DispatchOverview;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Collection} from 'react-materialize';\nimport {CollectionItem} from 'react-materialize';\nimport \"./style.css\";\n\nclass DispatchVehicles extends Component {\n    render () {\n        axios.get(\"/dispatch/dispatch-vehicles\")\n            .then((response) => {\n                console.log(\"successful\");\n            })\n            .catch((error) => {\n                console.log(\"error\");\n            });\n        return (\n        <div>\n            <h1>Dispatch Vehicles</h1>\n            <Collection header=\"Vehicles\">\n            <CollectionItem>Vehicle 1 </CollectionItem>\n            <CollectionItem>Vehicle 2</CollectionItem>\n            <CollectionItem>Vehicle 3</CollectionItem>\n            <CollectionItem>Vehicle 4</CollectionItem>\n            <CollectionItem>Vehicle 6</CollectionItem>\n        </Collection>\n        </div>\n    );\n    }\n}\n\nexport default DispatchVehicles;","import React from \"react\";\nimport axios from \"axios\";\n\nfunction DriverOrder() {\n    const id = 1;\n    const order = 1;\n    axios.get(`api/driver:${id}&order:${order}`)\n        .then((response) => {\n            console.log(JSON.stringify(response));\n        })\n        .catch((error) => {\n            console.log(JSON.stringify(error));\n        });\n    return(\n        <div>\n            <h1>Driver View of Order No. 12343</h1>\n            <p>Order info goes here.</p>\n        </div>\n    );\n}\n\nexport default DriverOrder;","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport './style.css';\n\n\nexport default class DeliveryTable extends Component {\n    render() {\n        return (\n\n        <div>\n    <Table striped bordered hover>\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Username</th>\n            </tr>\n        </thead>\n             <tbody>\n                <tr>\n                <td>1</td>\n                <td>Mark</td>\n                <td>Otto</td>\n                <td>@mdo</td>\n                </tr>\n                <tr>\n                <td>2</td>\n                <td>Jacob</td>\n            <td>Thornton</td>\n             <td>@fat</td>\n        </tr>\n        <tr>\n                <td>3</td>\n                <td colSpan=\"2\">Larry the Bird</td>\n                <td>@twitter</td>\n            </tr>\n        </tbody>\n    </Table>;\n    </div>\n    );\n }\n}\n\n\n","import React from \"react\";\nimport axios from \"axios\";\nimport MapContainer from \"../../components/MapContainer\";\nimport DeliveryTable from \"../../components/DeliveryTable\";\nimport \"./style.css\";\n\n\n\nfunction DriverOverview() {\n    const id = 1;\n    axios.get(`api/driver:${/*this.props.*/id}`)\n            .then((response) => {\n                console.log(\"successful\");\n            })\n            .catch((error) => {\n                console.log(\"error\");\n            });\n    return(\n        <div>\n            <h1>Dispatch Main Overview</h1>\n            <MapContainer />\n            <div>\n            <DeliveryTable />\n            </div>\n        </div>\n           \n    );\n}\n\nexport default DriverOverview;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button} from 'react-materialize';\nimport {Input} from 'react-materialize';\nimport {Row} from 'react-materialize';\nimport \"./style.css\";\n\nclass DriverSignup extends Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        vehicleMake: \"\",\n        vehicleModel: \"\",\n        vehicleYear: \"\",\n        vehicleColor: \"\",\n        licencePlate: \"\",\n        username: \"\",\n        password: \"\"\n    };\n    \n      handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        const { name, value } = event.target;\n    \n        // Updating the input's state\n        this.setState({\n          [name]: value.trim()\n        });\n      };\n    \n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n        const thisState = this;\n        const newDriver = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            phoneNumber: this.state.phoneNumber,\n            vehicleMake: this.state.vehicleMake,\n            vehicleModel: this.state.vehicleModel,\n            vehicleYear: this.state.vehicleYear,\n            vehicleColor: this.state.vehicleColor,\n            licencePlate: this.state.licencePlate,\n            username: this.state.username,\n            password:this.state.password\n        };\n        axios.post(\n            \"api/driver-signup\",\n            newDriver\n        ).then((response) => {\n            // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n            //alert(`Hello ${this.state.firstName} ${this.state.lastName}`);\n            thisState.setState({\n                firstName: \"\",\n                lastName: \"\",\n                phoneNumber: \"\",\n                vehicleMake: \"\",\n                vehicleModel: \"\",\n                vehicleYear: \"\",\n                vehicleColor:\"\",\n                licencePlate: \"\",\n                username: \"\",\n                password:\"\"\n            });\n            console.log(JSON.stringify(response.data));\n        }).catch((error) => {\n            console.log(JSON.stringify(error.data));\n        });;\n    };\n    \n    render() {\n        // Notice how each input has a `value`, `name`, and `onChange` prop\n        return (\n            <div>\n                <p> Drivers Sign up here</p>\n                <form className=\"form\">\n                    <Row>\n                        <p>Personal Information</p>\n                        <Input\n                            value={this.state.firstName}\n                            name=\"firstName\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            autoComplete=\"given-name\"\n                            required\n                        />\n                        <Input\n                            value={this.state.lastName}\n                            name=\"lastName\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            autoComplete=\"family-name\"\n                            required\n                        />\n                    </Row>\n                    <Input \n                        value={this.state.phoneNumber}\n                        name=\"phoneNumber\"\n                        onChange={this.handleInputChange}\n                        type=\"tel\"\n                        placeholder=\"Phone: XXX-XXX-XXXX\"\n                        autoComplete=\"tel\"\n                        required\n                    />\n                    <Row>\n                        <p>Vehicle Information</p>\n                        <Input \n                            value={this.state.vehicleMake}\n                            name=\"vehicleMake\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Vehicle Make\"\n                            required\n                        />\n                        <Input \n                            value={this.state.vehicleModel}\n                            name=\"vehicleModel\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Vehicle Model\"\n                            required\n                        />\n                        <Input\n                            value={this.state.vehicleYear}\n                            name=\"vehicleYear\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Vehicle Year\"\n                            minLength=\"4\"\n                            maxLength=\"4\"\n                            required\n                        />\n                        <Input\n                            value={this.state.color}\n                            name=\"vehicleColor\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Color\"\n                            required\n                        />\n                        <Input \n                            value={this.state.licencePlate}\n                            name=\"licencePlate\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Licence Plate #\"\n                            required\n                        />\n                    </Row>\n                    <p>Account Information</p>\n                    <Input\n                        value={this.state.username}\n                        name=\"username\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        required\n                    />\n                    <Input\n                        value={this.state.password}\n                        name=\"password\"\n                        onChange={this.handleInputChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"new-password\"\n                        required\n                    />\n                    <Button onClick={this.handleFormSubmit}>Submit</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default DriverSignup;","import React, { Component } from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {Button} from 'react-materialize';\nimport {Input} from 'react-materialize';\nimport {Row} from 'react-materialize';\n\n \nclass ClientSignup extends Component {\n\n    state = {\n            successfulSignup: false,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            username: \"\",\n            password: \"\"\n      };\n    \n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        const { name, value } = event.target;\n    \n        // Updating the input's state\n        this.setState({\n            [name]: value.trim()\n        });\n    };\n  \n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n        const thisState = this;\n        const newClient = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            phoneNumber: this.state.phoneNumber,\n            username: this.state.username,\n            password:this.state.password\n        };\n        axios.post(\n            \"api/client-signup\",\n            newClient\n        ).then((response) => {\n            thisState.setState({\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                username: \"\",\n                password:\"\"\n            });\n            console.log(JSON.stringify(response.data));\n        }).catch((error) => {\n            console.log(JSON.stringify(error.data));\n        });;\n    };\n    \n    render() {\n        if(this.state.successfulSignup) {\n            this.setState({successfulSignup: false});\n            return(<Redirect to=\"/login\" />);\n        }\n        else {\n            return (\n              <div>\n                  <h1>Signup for Pickup</h1>\n                  <h3>{(this.state.firstName || this.state.lastName)? `Hello ${this.state.firstName} ${this.state.lastName}` : null}</h3>\n                  <form className=\"form\">\n                  \n                      <h5>Personal Information</h5>\n                    <Row>\n                      <Input\n                        value={this.state.firstName}\n                        name=\"firstName\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                        autoComplete=\"given-name\"\n                        required\n                      />\n                      <Input\n                        value={this.state.lastName}\n                        name=\"lastName\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"Last Name\"\n                        autoComplete=\"family-name\"\n                        required\n                      />\n                      <Input\n                        value={this.state.email}\n                        name=\"email\"\n                        onChange={this.handleInputChange}\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        autoComplete=\"email\"\n                        required\n                      />\n                      <Input\n                        value={this.state.phoneNumber}\n                        name=\"phoneNumber\"\n                        onChange={this.handleInputChange}\n                        type=\"tel\"\n                        placeholder=\"Phone: XXX-XXX-XXXX\"\n                        autoComplete=\"tel\"\n                        required\n                      />\n                      </Row>\n                      <h5>Account Information</h5>\n                      <Input\n                        value={this.state.username}\n                        name=\"username\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        required\n                      />\n                      <Input\n                        value={this.state.password}\n                        name=\"password\"\n                        onChange={this.handleInputChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"new-password\"\n                        required\n                      />\n                      <Button onClick={this.handleFormSubmit}>Submit</Button>\n                  </form>\n              </div>\n            );\n        }\n    }\n}\n\nexport default ClientSignup;","import React, { Component } from 'react';\nimport \"./style.css\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport mapImage from './img/map.jpg';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\n\n\n\n\nclass Pickup extends Component {\n\n  render() {\n    return (\n      <div>\n     <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">Pick-Up</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\">Home</Nav.Link>\n      <Nav.Link href=\"#login\">Login</Nav.Link>\n      <Nav.Link href=\"#features\">Features</Nav.Link>\n      <Nav.Link href=\"#pricing\">About</Nav.Link>\n    </Nav>\n  </Navbar>\n       \n    <Container>\n      <Row>\n        <Col sm={6}>\n         <Jumbotron>\n           <h1>No truck? No worries. </h1>\n            <h3>\n            Pick-Up \n            </h3>\n              <h8>Schedule a hotshot pick up</h8>\n            <p>\n      <Button variant='primary'>Schedule</Button>\n        </p>\n          <div>\n            <h3>\n              Drive\n              </h3>\n                <h8>Quickly find hotshot deliveries locally.</h8>\n               <p>\n              <Button variant='primary'>Register</Button>\n             </p>\n          </div>\n     </Jumbotron>\n        </Col>\n          <Col sm={6}>\n            <Image src={mapImage} fluid />\n        </Col>\n      </Row>\n  </Container>\n\n  <Navbar id='footer' sticky='bottom' bg='dark' variants='dark' >\n  </Navbar>\n   \n</div>\n    );\n    }\n  }\n\nexport default Pickup;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\nimport {Button} from 'react-materialize';\nimport {Input} from 'react-materialize';\nimport {Row} from 'react-materialize';\nimport \"./style.css\"\n\nclass UserLogin extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\",\n        isAuthenticated: false,\n        userType: \"\"\n      };\n    \n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        const { name, value } = event.target;\n    \n        // Updating the input's state\n        this.setState({\n            [name]: value.trim()\n        });\n    };\n    \n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n        const thisState = this;\n        const userLogin = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        axios.post(\n            \"/api/login\",\n            userLogin\n        ).then((response) => {\n            // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n            //alert(`Hello ${this.state.firstName} ${this.state.lastName}`);\n            this.setState({\n                username: \"\",\n                password:\"\"\n            });\n            switch (response.data.loginType) {\n                case \"client\":\n                    thisState.setState({\n                        isAuthenticated: true,\n                        userType: \"client\"\n                    });\n                    break;\n                case \"driver\":\n                    thisState.setState({\n                        isAuthenticated: true,\n                        userType: \"driver\"\n                    });\n                    break;\n                case \"dispatch\":\n                    thisState.setState({\n                        isAuthenticated: true,\n                        userType: \"dispatch\"\n                    });\n                    break;\n                default:\n                    console.log(\"user not authorized\");\n                    break;\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n    };\n    \n    render() {\n        // Notice how each input has a `value`, `name`, and `onChange` prop\n        if (this.state.isAuthenticated) {\n            let newPath;\n            switch (this.state.userType) {\n                case \"client\":\n                    newPath = \"/submit-order\";\n                    break;\n                case \"driver\":\n                    newPath = \"/driver\";\n                    break;\n                case \"dispatch\":\n                    newPath = \"/dispatch\";\n                    break;\n                default:\n                    newPath = \"/login\";\n                    break;\n            }\n            return <Redirect to={newPath} />;\n        } else {\n            return (\n                <div>\n                    <h1>Login to Pickup</h1>\n                    <h5>\n                    Hello {this.state.firstName} {this.state.lastName}\n                    </h5>\n                    <form className=\"form\">\n                    <Row>\n                        <Input\n                            value={this.state.username}\n                            name=\"username\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            autoComplete=\"username\"\n                            required\n                        />\n                        <Input\n                            value={this.state.password}\n                            name=\"password\"\n                            onChange={this.handleInputChange}\n                            type=\"text\"\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            required\n                        />\n                        </Row>\n                        <Button variant=\"primary\" onClick={this.handleFormSubmit}>Submit</Button>\n                    </form>\n                </div>\n            );\n        }\n    }\n}\n\nexport default UserLogin;","import React, { Component } from 'react';\nimport {Route, Switch} from \"react-router-dom\"; \nimport { GoogleApiWrapper } from 'google-maps-react';\n\n//page imports\nimport ClientOrder from \"./pages/ClientOrder\";\nimport DispatchDrivers from \"./pages/DispatchDrivers\";\nimport DispatchOverview from \"./pages/DispatchOverview\";\nimport DispatchVehicle from \"./pages/DispatchVehicle\";\nimport DriverOrder from \"./pages/DriverOrder\";\nimport DriverOverview from \"./pages/DriverOverview\";\nimport DriverSignup from \"./pages/DriverSignup\";\nimport ClientSignup from \"./pages/ClientSignup\";\nimport PickupHome from \"./pages/PickupHome\";\nimport UserLogin from \"./pages/UserLogin\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={PickupHome}/>\n        <Route path=\"/signup/driver\" component={DriverSignup}/>\n        <Route path=\"/signup/client\" component={ClientSignup}/>\n        <Route path=\"/login\" component={UserLogin}/>\n        <Route exact path=\"/dispatch\" component={DispatchOverview}/>\n        <Route path=\"/driver\" component={DriverOverview}/>\n        <Route exact path=\"/dispatch/vehicles\" component={DispatchVehicle}/>\n        <Route exact path=\"/dispatch/drivers\" component={DispatchDrivers}/>\n        <Route path=\"/driver/order:id\" component={DriverOrder}/>\n        <Route path=\"/submit-order\" render={(props) => <ClientOrder {...props} google={this.props.google}/>} />\n      </Switch>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCJ7S7yZRVxrerAXxamcQpUP0TD4DjHy04'\n})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    // <Provider>\n        <Router>\n            <App />\n        </Router>,\n    // </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/map.68984a18.jpg\";"],"sourceRoot":""}